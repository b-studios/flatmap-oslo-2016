* Title
Write you a DSL: Free Applicative Functors or Free Monads? Both!

* Abstract
Free Monads are a very popular way to create powerful DSLs, but so are Free Applicative Functors.  Both come with specific advantages and disadvantages.  In this talk, we will create a DSL that combines both approaches, getting the best of both worlds.  The resulting language can make use of optimization using parts written using Free Applicative Functors as well as depend on previous results using Free Monads.  The DSL will evolve from a purely monadic version to our final mix, exploring the benefits like parallel execution and static analysis.

* Bio
German IT Consultant at codecentric AG, passionate open-source contributor, functional programming lover.

Markus Hauck is a passionate software developer and Scala trainer working for codecentric AG in Germany.  He is a passionate open-source contributor for both Scala and Haskell projects.  For his day job, he is working as a Scala developer/trainer.  Infected by Haskell with (pure) functional programming ideas and a powerful type system, he explores their application in Scala.
